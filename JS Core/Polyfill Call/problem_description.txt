Write a polyfill for the call method in JavaScript. 

You need to create a polyfill for the call method, which allows you to invoke a function with a specified context and any number of arguments.

Your task is to implement a function customCall on the Function.prototype object. This function should accept two or more arguments: obj, which represents the context (the value of this) to be used when calling the function, and ...args, which represents the arguments to be passed to the function.

When the customCall method is called on a function, it should execute the original function with the specified context (obj) and the provided arguments (args).

Your implementation should not rely on the inbuilt call method in JavaScript.

Note: Avoid using the inbuilt call method in JavaScript, as trivial test cases will check for that.



Example: 
function greet() {
  return 'Hello, ' + this.name + '!';
}

const person = {
  name: 'John',
};

const result = greet.customCall(person);
console.log(result);

Output: 
Hello, John!
