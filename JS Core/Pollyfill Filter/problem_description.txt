Write a pollyfill of 'filter'

You need to complete the function reduce, which recieves 2 inputs:
1. 'arr'
    1.1. An array of numbers 
2. 'callback'
    2.1. A function that does takes a number as input and returns a true or false value in return.
    2.2. callback(num) returns a boolean.
    2.3. For each element of the array, if returned boolean is:
        2.3.1. True:  The element will be in the filtered array.
        2.3.2. False: The element will not be in the filtered array.

The function filter(arr, callback), when called, should behave in similar fashion as inbuilt Array.prototype.filter() function in JavaScript.
Refrain from using the inbuilt Array.protoype.filter() function in JS, trivial test case would check for that. 


Example 1:
arr = [1, 2, 3, 4, 5];
callback = fn(num) => num % 2 === 0;

Output: 
[2, 4]

Example 2:
arr = [1, 2, 3, 4, 5];
callback = fn(num) => num < 4;

Output: 
[1, 2, 3]
